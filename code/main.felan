byte :: i8;
ubyte :: u8;

short :: i16;
ushort :: u16;

int :: i32;
uint :: u32;

long :: i64;
ulong :: u64;

// short_float :: f16;
float :: f32;
double :: f64;
long_double :: f128;

usize :: u64;


main :: () -> void {
  print_u64_rev(1234);
};

print_u64_rev :: (value:u64) -> void {
  value := value;
  first_time := true;
  while {
    first_time = false;
    putc '0' + @cast(value % 10,u8);
    value /= 10;
    value != 0;
  } {}
};
